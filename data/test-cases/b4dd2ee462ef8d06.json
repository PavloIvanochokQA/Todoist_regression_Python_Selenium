{
  "uid" : "b4dd2ee462ef8d06",
  "name" : "TC23: Successful creation of a new Task List.",
  "fullName" : "tests.test_projects_management.TestProjectsManagement#test_task_list_creation",
  "historyId" : "2241a6488b2234a23c385697e8cb4ca6",
  "time" : {
    "start" : 1735902480185,
    "stop" : 1735902484627,
    "duration" : 4442
  },
  "description" : "\n    This test verifies that a new Task List can be successfully created with a valid name.\n    ",
  "descriptionHtml" : "<pre><code>This test verifies that a new Task List can be successfully created with a valid name.\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nMessage: unexpected alert open: {Alert text : }\n  (Session info: headless chrome=112.0.5615.165)",
  "statusTrace" : "self = <test_projects_management.TestProjectsManagement object at 0x7fbbb4a65f50>\ncreate_account = ('qbrennan@example.org', '^s6BxGCo4KWz', 'Morgan')\ndelete_account = <function delete_account.<locals>.delete at 0x7fbbb6cde7a0>\n\n    @pytest.mark.order(23)\n    @pytest.mark.regression\n    @allure.feature(\"Projects Management\")\n    @allure.description(\"\"\"\n    This test verifies that a new Task List can be successfully created with a valid name.\n    \"\"\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"TC23: Successful creation of a new Task List.\")\n    def test_task_list_creation(self, create_account, delete_account):\n        email, password, username = create_account\n        fake = FakeDataGenerator()\n        project_name = fake.project_name\n        try:\n            # Steps:\n            self.home_page.click_my_projects_button()\n            self.projects_page.is_opened()\n            self.projects_page.click_my_projects_menu_button()\n            self.projects_page.click_add_project_button()\n            self.projects_page.enter_project_name(project_name)\n            self.projects_page.choose_list()\n            self.projects_page.click_add_button()\n            self.projects_page.is_my_projects_section_contains_project(project_name)\n        except Exception as e:\n            take_screenshot(self.driver, \"Task List Creation Test Failed\")\n            raise e\n        finally:\n            # Postconditions:\n            with allure.step(\"Postconditions: Delete the created account.\"):\n>               delete_account(email, password)\n\ntests/test_projects_management.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:85: in delete\n    raise e\nconftest.py:79: in delete\n    delete_management_page.enter_email(email)\npages/profile_management_pages.py:120: in enter_email\n    self.enter_text(self.TODOIST_EMAIL_FIELD, email)\nbase/base_page.py:24: in enter_text\n    element = self.wait.until(EC.element_to_be_clickable(locator))\n../local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../local/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:363: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n../local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbbb6c93250>\nresponse = {'status': 500, 'value': '{\"value\":{\"data\":{\"text\":\"{Alert text : \"},\"error\":\"unexpected alert open\",\"message\":\"unexpected alert open: {Alert text : }\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n>           raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nE           Message: unexpected alert open: {Alert text : }\nE             (Session info: headless chrome=112.0.5615.165)\n\n../local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:228: UnexpectedAlertPresentException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "delete_account",
    "time" : {
      "start" : 1735902480185,
      "stop" : 1735902480185,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "create_account",
    "time" : {
      "start" : 1735902472079,
      "stop" : 1735902480185,
      "duration" : 8106
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open the page https://app.todoist.com/auth/signup.",
      "time" : {
        "start" : 1735902472081,
        "stop" : 1735902472809,
        "duration" : 728
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter email into the \"Email\" field.",
      "time" : {
        "start" : 1735902472809,
        "stop" : 1735902472952,
        "duration" : 143
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "email",
        "value" : "'qbrennan@example.org'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Enter password into the \"Password\" field.",
      "time" : {
        "start" : 1735902472952,
        "stop" : 1735902473050,
        "duration" : 98
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "password",
        "value" : "'^s6BxGCo4KWz'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Click on the \"Sign up with Email\" button.",
      "time" : {
        "start" : 1735902473051,
        "stop" : 1735902473120,
        "duration" : 69
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter username into the \"Your name\" field.",
      "time" : {
        "start" : 1735902473121,
        "stop" : 1735902478128,
        "duration" : 5007
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "username",
        "value" : "'Morgan'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Click on the \"Continue\" button.",
      "time" : {
        "start" : 1735902478128,
        "stop" : 1735902478511,
        "duration" : 383
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Select \"Personal\" checkbox.",
      "time" : {
        "start" : 1735902478511,
        "stop" : 1735902478579,
        "duration" : 68
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Click on the \"Launch Todoist\" button.",
      "time" : {
        "start" : 1735902478579,
        "stop" : 1735902480156,
        "duration" : 1577
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Verify that the page with the URL https://app.todoist.com/app/today is opened.",
      "time" : {
        "start" : 1735902480156,
        "stop" : 1735902480185,
        "duration" : 29
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 9,
    "hasContent" : true
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1735902472078,
      "stop" : 1735902472079,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1735902471753,
      "stop" : 1735902472078,
      "duration" : 325
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1735902191009,
      "stop" : 1735902191074,
      "duration" : 65
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n    This test verifies that a new Task List can be successfully created with a valid name.\n    ",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nMessage: unexpected alert open: {Alert text : }\n  (Session info: headless chrome=112.0.5615.165)",
    "statusTrace" : "self = <test_projects_management.TestProjectsManagement object at 0x7fbbb4a65f50>\ncreate_account = ('qbrennan@example.org', '^s6BxGCo4KWz', 'Morgan')\ndelete_account = <function delete_account.<locals>.delete at 0x7fbbb6cde7a0>\n\n    @pytest.mark.order(23)\n    @pytest.mark.regression\n    @allure.feature(\"Projects Management\")\n    @allure.description(\"\"\"\n    This test verifies that a new Task List can be successfully created with a valid name.\n    \"\"\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"TC23: Successful creation of a new Task List.\")\n    def test_task_list_creation(self, create_account, delete_account):\n        email, password, username = create_account\n        fake = FakeDataGenerator()\n        project_name = fake.project_name\n        try:\n            # Steps:\n            self.home_page.click_my_projects_button()\n            self.projects_page.is_opened()\n            self.projects_page.click_my_projects_menu_button()\n            self.projects_page.click_add_project_button()\n            self.projects_page.enter_project_name(project_name)\n            self.projects_page.choose_list()\n            self.projects_page.click_add_button()\n            self.projects_page.is_my_projects_section_contains_project(project_name)\n        except Exception as e:\n            take_screenshot(self.driver, \"Task List Creation Test Failed\")\n            raise e\n        finally:\n            # Postconditions:\n            with allure.step(\"Postconditions: Delete the created account.\"):\n>               delete_account(email, password)\n\ntests/test_projects_management.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:85: in delete\n    raise e\nconftest.py:79: in delete\n    delete_management_page.enter_email(email)\npages/profile_management_pages.py:120: in enter_email\n    self.enter_text(self.TODOIST_EMAIL_FIELD, email)\nbase/base_page.py:24: in enter_text\n    element = self.wait.until(EC.element_to_be_clickable(locator))\n../local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../local/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:363: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n../local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbbb6c93250>\nresponse = {'status': 500, 'value': '{\"value\":{\"data\":{\"text\":\"{Alert text : \"},\"error\":\"unexpected alert open\",\"message\":\"unexpected alert open: {Alert text : }\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n>           raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nE           Message: unexpected alert open: {Alert text : }\nE             (Session info: headless chrome=112.0.5615.165)\n\n../local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:228: UnexpectedAlertPresentException",
    "steps" : [ {
      "name" : "Click on the \"My Projects\" button.",
      "time" : {
        "start" : 1735902480187,
        "stop" : 1735902480385,
        "duration" : 198
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Verify that the page with a URL starting with https://app.todoist.com/app/project is opened.",
      "time" : {
        "start" : 1735902480385,
        "stop" : 1735902480392,
        "duration" : 7
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Click on the \"My projects menu\" button.",
      "time" : {
        "start" : 1735902480392,
        "stop" : 1735902480527,
        "duration" : 135
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Click on the \"Add project\" button.",
      "time" : {
        "start" : 1735902480527,
        "stop" : 1735902480647,
        "duration" : 120
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter project name into the \"Name\" field.",
      "time" : {
        "start" : 1735902480647,
        "stop" : 1735902480917,
        "duration" : 270
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "project_name",
        "value" : "'RELIGIOUS THIRD IMPORTANT'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Choose List as the project type.",
      "time" : {
        "start" : 1735902480917,
        "stop" : 1735902480982,
        "duration" : 65
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Click on the \"Add\" button.",
      "time" : {
        "start" : 1735902480982,
        "stop" : 1735902482225,
        "duration" : 1243
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Verify that a project appears in the My Projects section.",
      "time" : {
        "start" : 1735902482225,
        "stop" : 1735902482239,
        "duration" : 14
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "project_name",
        "value" : "'RELIGIOUS THIRD IMPORTANT'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Postconditions: Delete the created account.",
      "time" : {
        "start" : 1735902482239,
        "stop" : 1735902484626,
        "duration" : 2387
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nMessage: unexpected alert open: {Alert text : }\n  (Session info: headless chrome=112.0.5615.165)\n\n",
      "statusTrace" : "  File \"/usr/workspace/tests/test_projects_management.py\", line 38, in test_task_list_creation\n    delete_account(email, password)\n  File \"/usr/workspace/conftest.py\", line 85, in delete\n    raise e\n  File \"/usr/workspace/conftest.py\", line 79, in delete\n    delete_management_page.enter_email(email)\n  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/profile_management_pages.py\", line 120, in enter_email\n    self.enter_text(self.TODOIST_EMAIL_FIELD, email)\n  File \"/usr/workspace/base/base_page.py\", line 24, in enter_text\n    element = self.wait.until(EC.element_to_be_clickable(locator))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py\", line 363, in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 766, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 380, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 228, in check_response\n    raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ {
        "name" : "Open the page https://app.todoist.com/app/settings/account/delete.",
        "time" : {
          "start" : 1735902483239,
          "stop" : 1735902483243,
          "duration" : 4
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Enter email into the \"Todoist email\" field.",
        "time" : {
          "start" : 1735902484243,
          "stop" : 1735902484246,
          "duration" : 3
        },
        "status" : "broken",
        "statusMessage" : "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nMessage: unexpected alert open: {Alert text : }\n  (Session info: headless chrome=112.0.5615.165)\n\n",
        "statusTrace" : "  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/profile_management_pages.py\", line 120, in enter_email\n    self.enter_text(self.TODOIST_EMAIL_FIELD, email)\n  File \"/usr/workspace/base/base_page.py\", line 24, in enter_text\n    element = self.wait.until(EC.element_to_be_clickable(locator))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py\", line 363, in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 766, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 380, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 228, in check_response\n    raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "email",
          "value" : "'qbrennan@example.org'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ {
        "uid" : "e1864fad1f17cb86",
        "name" : "Account Deletion Failed",
        "source" : "e1864fad1f17cb86.png",
        "type" : "image/png",
        "size" : 101173
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "stepsCount" : 2,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 11,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1735902484660,
      "stop" : 1735902484660,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Projects Management"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "tag",
    "value" : "regression"
  }, {
    "name" : "tag",
    "value" : "order(23)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_projects_management"
  }, {
    "name" : "subSuite",
    "value" : "TestProjectsManagement"
  }, {
    "name" : "host",
    "value" : "26837371c4e9"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_projects_management"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 6,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "394223a42b8c0861",
        "status" : "passed",
        "time" : {
          "start" : 1735897065844,
          "stop" : 1735897072448,
          "duration" : 6604
        }
      }, {
        "uid" : "3335ba06527ca3e8",
        "status" : "passed",
        "time" : {
          "start" : 1735834233807,
          "stop" : 1735834241445,
          "duration" : 7638
        }
      }, {
        "uid" : "a7205c08b04a48db",
        "status" : "passed",
        "time" : {
          "start" : 1735832332033,
          "stop" : 1735832338779,
          "duration" : 6746
        }
      }, {
        "uid" : "48fe824280f0170",
        "status" : "passed",
        "time" : {
          "start" : 1735828177246,
          "stop" : 1735828186294,
          "duration" : 9048
        }
      }, {
        "uid" : "23f1db0d2870d1e1",
        "status" : "passed",
        "time" : {
          "start" : 1735822042943,
          "stop" : 1735822052023,
          "duration" : 9080
        }
      }, {
        "uid" : "9c7c1600c6278509",
        "status" : "passed",
        "time" : {
          "start" : 1735333792727,
          "stop" : 1735333800517,
          "duration" : 7790
        }
      } ]
    },
    "tags" : [ "regression", "order(23)" ]
  },
  "source" : "b4dd2ee462ef8d06.json",
  "parameterValues" : [ ]
}