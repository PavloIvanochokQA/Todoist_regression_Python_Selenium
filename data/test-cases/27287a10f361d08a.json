{
  "uid" : "27287a10f361d08a",
  "name" : "TC15: Successful change of task due date and time.",
  "fullName" : "tests.test_task_management.TestTaskManagement#test_due_date_and_time_update",
  "historyId" : "15c28faeca4bd22d04cd7d40eac356e0",
  "time" : {
    "start" : 1735902361105,
    "stop" : 1735902366797,
    "duration" : 5692
  },
  "description" : "\n    This test verifies that the due date and time of an existing task can be successfully updated.\n    ",
  "descriptionHtml" : "<pre><code>This test verifies that the due date and time of an existing task can be successfully updated.\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nMessage: unexpected alert open: {Alert text : }\n  (Session info: headless chrome=112.0.5615.165)",
  "statusTrace" : "self = <test_task_management.TestTaskManagement object at 0x7fbbb4a78090>\nlogin = None\ncreate_task = ('Across choose get hot interesting series.', 'About pass fly human participant concern clear hour. Do his skin city concern address. Building near can.', 2)\ndelete_task = <function delete_task.<locals>.delete at 0x7fbbb6cdcf40>\n\n    @pytest.mark.order(15)\n    @pytest.mark.regression\n    @allure.feature(\"Task Management\")\n    @allure.description(\"\"\"\n    This test verifies that the due date and time of an existing task can be successfully updated.\n    \"\"\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.title(\"TC15: Successful change of task due date and time.\")\n    def test_due_date_and_time_update(self, login, create_task, delete_task):\n        task_name, task_description, task_priority = create_task\n        hour = random.randint(0, 23)\n        minute = random.randint(0, 59)\n        random_time = f\"{hour:02d}:{minute:02d}\"\n        try:\n            # Steps:\n            self.home_page.open_task(task_name)\n            self.task_page.is_opened()\n            self.task_page.click_due_date_button()\n            self.task_page.click_time_button()\n            self.task_page.enter_time(random_time)\n            self.task_page.click_save_button()\n            self.task_page.click_tomorrow_button()\n            self.task_page.is_task_contains_due_date(f\"Tomorrow {random_time}\")\n            self.task_page.click_due_date_button()\n            self.task_page.click_today_button()\n            self.task_page.is_task_contains_due_date(f\"Today {random_time}\")\n        except Exception as e:\n            take_screenshot(self.driver, \"Due Date and Time Update Test Failed\")\n            raise e\n        finally:\n            # Postconditions:\n            with allure.step(\"Postconditions: Delete the created task.\"):\n>               delete_task(task_name)\n\ntests/test_task_management.py:148: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:123: in delete\n    raise e\nconftest.py:117: in delete\n    home_page.click_more_actions_button(task_name)\npages/home_page.py:125: in click_more_actions_button\n    task_element = self.wait_for_visibility(task_locator)\nbase/base_page.py:29: in wait_for_visibility\n    return self.wait.until(EC.visibility_of_element_located(locator), timeout)\n../local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../local/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n../local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbbb6ccb910>\nresponse = {'status': 500, 'value': '{\"value\":{\"data\":{\"text\":\"{Alert text : \"},\"error\":\"unexpected alert open\",\"message\":\"unexpected alert open: {Alert text : }\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n>           raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nE           Message: unexpected alert open: {Alert text : }\nE             (Session info: headless chrome=112.0.5615.165)\n\n../local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:228: UnexpectedAlertPresentException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1735902354082,
      "stop" : 1735902357603,
      "duration" : 3521
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open the page https://app.todoist.com/auth/login.",
      "time" : {
        "start" : 1735902354082,
        "stop" : 1735902354606,
        "duration" : 524
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter email into the \"Email\" field.",
      "time" : {
        "start" : 1735902354606,
        "stop" : 1735902354870,
        "duration" : 264
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "email",
        "value" : "'seb.bell@ymail.com'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Enter password into the \"Password\" field.",
      "time" : {
        "start" : 1735902354870,
        "stop" : 1735902354969,
        "duration" : 99
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "password",
        "value" : "'h28cnTtBfH3m'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Click on the \"Log in\" button.",
      "time" : {
        "start" : 1735902354969,
        "stop" : 1735902355042,
        "duration" : 73
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Verify that the page with the URL https://app.todoist.com/app/today is opened.",
      "time" : {
        "start" : 1735902355042,
        "stop" : 1735902357603,
        "duration" : 2561
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 5,
    "hasContent" : true
  }, {
    "name" : "delete_task",
    "time" : {
      "start" : 1735902361105,
      "stop" : 1735902361105,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1735902353697,
      "stop" : 1735902354029,
      "duration" : 332
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1735902354029,
      "stop" : 1735902354082,
      "duration" : 53
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "create_task",
    "time" : {
      "start" : 1735902357603,
      "stop" : 1735902361104,
      "duration" : 3501
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Click on the \"Add task\" button.",
      "time" : {
        "start" : 1735902357605,
        "stop" : 1735902358481,
        "duration" : 876
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter task name into the \"Task name\" field.",
      "time" : {
        "start" : 1735902358482,
        "stop" : 1735902359301,
        "duration" : 819
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "task_name",
        "value" : "'Across choose get hot interesting series.'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Enter description into the \"Description\" field.",
      "time" : {
        "start" : 1735902359301,
        "stop" : 1735902359773,
        "duration" : 472
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "task_description",
        "value" : "'About pass fly human participant concern clear hour. Do his skin city concern address. Building near can.'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Set the task's Priority.",
      "time" : {
        "start" : 1735902359774,
        "stop" : 1735902359946,
        "duration" : 172
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "task_priority",
        "value" : "2"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Click on the submit \"Add task\" button.",
      "time" : {
        "start" : 1735902359946,
        "stop" : 1735902361104,
        "duration" : 1158
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 5,
    "hasContent" : true
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1735902191009,
      "stop" : 1735902191074,
      "duration" : 65
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n    This test verifies that the due date and time of an existing task can be successfully updated.\n    ",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nMessage: unexpected alert open: {Alert text : }\n  (Session info: headless chrome=112.0.5615.165)",
    "statusTrace" : "self = <test_task_management.TestTaskManagement object at 0x7fbbb4a78090>\nlogin = None\ncreate_task = ('Across choose get hot interesting series.', 'About pass fly human participant concern clear hour. Do his skin city concern address. Building near can.', 2)\ndelete_task = <function delete_task.<locals>.delete at 0x7fbbb6cdcf40>\n\n    @pytest.mark.order(15)\n    @pytest.mark.regression\n    @allure.feature(\"Task Management\")\n    @allure.description(\"\"\"\n    This test verifies that the due date and time of an existing task can be successfully updated.\n    \"\"\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.title(\"TC15: Successful change of task due date and time.\")\n    def test_due_date_and_time_update(self, login, create_task, delete_task):\n        task_name, task_description, task_priority = create_task\n        hour = random.randint(0, 23)\n        minute = random.randint(0, 59)\n        random_time = f\"{hour:02d}:{minute:02d}\"\n        try:\n            # Steps:\n            self.home_page.open_task(task_name)\n            self.task_page.is_opened()\n            self.task_page.click_due_date_button()\n            self.task_page.click_time_button()\n            self.task_page.enter_time(random_time)\n            self.task_page.click_save_button()\n            self.task_page.click_tomorrow_button()\n            self.task_page.is_task_contains_due_date(f\"Tomorrow {random_time}\")\n            self.task_page.click_due_date_button()\n            self.task_page.click_today_button()\n            self.task_page.is_task_contains_due_date(f\"Today {random_time}\")\n        except Exception as e:\n            take_screenshot(self.driver, \"Due Date and Time Update Test Failed\")\n            raise e\n        finally:\n            # Postconditions:\n            with allure.step(\"Postconditions: Delete the created task.\"):\n>               delete_task(task_name)\n\ntests/test_task_management.py:148: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:123: in delete\n    raise e\nconftest.py:117: in delete\n    home_page.click_more_actions_button(task_name)\npages/home_page.py:125: in click_more_actions_button\n    task_element = self.wait_for_visibility(task_locator)\nbase/base_page.py:29: in wait_for_visibility\n    return self.wait.until(EC.visibility_of_element_located(locator), timeout)\n../local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../local/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n../local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbbb6ccb910>\nresponse = {'status': 500, 'value': '{\"value\":{\"data\":{\"text\":\"{Alert text : \"},\"error\":\"unexpected alert open\",\"message\":\"unexpected alert open: {Alert text : }\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n>           raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nE           Message: unexpected alert open: {Alert text : }\nE             (Session info: headless chrome=112.0.5615.165)\n\n../local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:228: UnexpectedAlertPresentException",
    "steps" : [ {
      "name" : "Open the task.",
      "time" : {
        "start" : 1735902361105,
        "stop" : 1735902362313,
        "duration" : 1208
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "task_name",
        "value" : "'Across choose get hot interesting series.'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Verify that the page with a URL starting with https://app.todoist.com/app/task is opened.",
      "time" : {
        "start" : 1735902362313,
        "stop" : 1735902362316,
        "duration" : 3
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Click on the \"Due date\" button.",
      "time" : {
        "start" : 1735902362316,
        "stop" : 1735902362655,
        "duration" : 339
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Click on the \"Time\" button.",
      "time" : {
        "start" : 1735902362656,
        "stop" : 1735902362798,
        "duration" : 142
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter the time into the \"Time\" field.",
      "time" : {
        "start" : 1735902362798,
        "stop" : 1735902363042,
        "duration" : 244
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "value",
        "value" : "'05:30'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Click on the \"Save\" button.",
      "time" : {
        "start" : 1735902363042,
        "stop" : 1735902363495,
        "duration" : 453
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Click on the \"Tomorrow\" button.",
      "time" : {
        "start" : 1735902363495,
        "stop" : 1735902364115,
        "duration" : 620
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Verify that the task displays the correct due date and time.",
      "time" : {
        "start" : 1735902364115,
        "stop" : 1735902364141,
        "duration" : 26
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "due_date",
        "value" : "'Tomorrow 05:30'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Click on the \"Due date\" button.",
      "time" : {
        "start" : 1735902364141,
        "stop" : 1735902364450,
        "duration" : 309
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Click on the \"Today\" button.",
      "time" : {
        "start" : 1735902364450,
        "stop" : 1735902364583,
        "duration" : 133
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Verify that the task displays the correct due date and time.",
      "time" : {
        "start" : 1735902364584,
        "stop" : 1735902364601,
        "duration" : 17
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "due_date",
        "value" : "'Today 05:30'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Postconditions: Delete the created task.",
      "time" : {
        "start" : 1735902364601,
        "stop" : 1735902366796,
        "duration" : 2195
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nMessage: unexpected alert open: {Alert text : }\n  (Session info: headless chrome=112.0.5615.165)\n\n",
      "statusTrace" : "  File \"/usr/workspace/tests/test_task_management.py\", line 148, in test_due_date_and_time_update\n    delete_task(task_name)\n  File \"/usr/workspace/conftest.py\", line 123, in delete\n    raise e\n  File \"/usr/workspace/conftest.py\", line 117, in delete\n    home_page.click_more_actions_button(task_name)\n  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/home_page.py\", line 125, in click_more_actions_button\n    task_element = self.wait_for_visibility(task_locator)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/workspace/base/base_page.py\", line 29, in wait_for_visibility\n    return self.wait.until(EC.visibility_of_element_located(locator), timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py\", line 156, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 766, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 380, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 228, in check_response\n    raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ {
        "name" : "Open the page https://app.todoist.com/app/today.",
        "time" : {
          "start" : 1735902365601,
          "stop" : 1735902365605,
          "duration" : 4
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Click on the \"More actions\" button on the task.",
        "time" : {
          "start" : 1735902366605,
          "stop" : 1735902366608,
          "duration" : 3
        },
        "status" : "broken",
        "statusMessage" : "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nMessage: unexpected alert open: {Alert text : }\n  (Session info: headless chrome=112.0.5615.165)\n\n",
        "statusTrace" : "  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/home_page.py\", line 125, in click_more_actions_button\n    task_element = self.wait_for_visibility(task_locator)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/workspace/base/base_page.py\", line 29, in wait_for_visibility\n    return self.wait.until(EC.visibility_of_element_located(locator), timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py\", line 156, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 766, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 380, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 228, in check_response\n    raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "task_name",
          "value" : "'Across choose get hot interesting series.'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ {
        "uid" : "6cd0530fa443b7a5",
        "name" : "Task Deletion Failed",
        "source" : "6cd0530fa443b7a5.png",
        "type" : "image/png",
        "size" : 87579
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "stepsCount" : 2,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 14,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1735902366863,
      "stop" : 1735902366863,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Task Management"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "tag",
    "value" : "regression"
  }, {
    "name" : "tag",
    "value" : "order(15)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_task_management"
  }, {
    "name" : "subSuite",
    "value" : "TestTaskManagement"
  }, {
    "name" : "host",
    "value" : "26837371c4e9"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_task_management"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 6,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "b9e46a8bd8770362",
        "status" : "passed",
        "time" : {
          "start" : 1735896957028,
          "stop" : 1735896966145,
          "duration" : 9117
        }
      }, {
        "uid" : "cc5b2fdfae23a97a",
        "status" : "passed",
        "time" : {
          "start" : 1735834098852,
          "stop" : 1735834108500,
          "duration" : 9648
        }
      }, {
        "uid" : "b0374ee733f0e116",
        "status" : "passed",
        "time" : {
          "start" : 1735832208377,
          "stop" : 1735832217786,
          "duration" : 9409
        }
      }, {
        "uid" : "4cec08e4e3555ace",
        "status" : "passed",
        "time" : {
          "start" : 1735828059533,
          "stop" : 1735828068702,
          "duration" : 9169
        }
      }, {
        "uid" : "638fe5e0ad72694d",
        "status" : "passed",
        "time" : {
          "start" : 1735821922519,
          "stop" : 1735821931988,
          "duration" : 9469
        }
      }, {
        "uid" : "665236dfab092b1d",
        "status" : "passed",
        "time" : {
          "start" : 1735333635337,
          "stop" : 1735333642717,
          "duration" : 7380
        }
      } ]
    },
    "tags" : [ "regression", "order(15)" ]
  },
  "source" : "27287a10f361d08a.json",
  "parameterValues" : [ ]
}