{
  "uid" : "2173c124b313a579",
  "name" : "TC37: Successful search for a task with a specific comment.",
  "fullName" : "tests.test_task_search.TestTaskSearch#test_task_search_by_comment",
  "historyId" : "c4248b6f578a03333d23de5807cc6268",
  "time" : {
    "start" : 1735925949981,
    "stop" : 1735925985523,
    "duration" : 35542
  },
  "description" : "\n    This test verifies that a user can successfully search for a task with a specific comment, ensuring that tasks containing the specified comment are correctly identified and displayed in the search results.\n    ",
  "descriptionHtml" : "<pre><code>This test verifies that a user can successfully search for a task with a specific comment, ensuring that tasks containing the specified comment are correctly identified and displayed in the search results.\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: 10",
  "statusTrace" : "self = <test_task_search.TestTaskSearch object at 0x7f37713f1210>, login = None\ncreate_task = ('Color today station his.', 'Expect chance son he attorney national. Speech knowledge head later their at. Baby service season resource.', 1)\ndelete_task = <function delete_task.<locals>.delete at 0x7f3772a909a0>\n\n    @pytest.mark.order(37)\n    @pytest.mark.regression\n    @allure.feature(\"Task Search\")\n    @allure.description(\"\"\"\n    This test verifies that a user can successfully search for a task with a specific comment, ensuring that tasks containing the specified comment are correctly identified and displayed in the search results.\n    \"\"\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.title(\"TC37: Successful search for a task with a specific comment.\")\n    def test_task_search_by_comment(self, login, create_task, delete_task):\n        task_name, task_description, task_priority = create_task\n        fake = FakeDataGenerator()\n        comment = fake.comment\n        try:\n            # Steps:\n            self.home_page.open_task(task_name)\n            self.task_page.click_comment_button()\n            self.task_page.enter_comment(comment)\n            self.task_page.click_add_comment_button()\n            self.task_page.close_task()\n            self.home_page.click_search_button()\n            self.home_page.enter_search_request(comment)\n            self.home_page.press_enter()\n            self.search_page.click_comments_button()\n            self.search_page.is_page_heading_contains_search_result(comment)\n            self.search_page.is_task_list_contains_task_with_comment(task_name)\n        except Exception as e:\n            take_screenshot(self.driver, \"Task Search by Comment Test Failed\")\n>           raise e\n\ntests/test_task_search.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_task_search.py:107: in test_task_search_by_comment\n    self.home_page.open_task(task_name)\npages/home_page.py:85: in open_task\n    self.wait_for_visibility(task_locator)\nbase/base_page.py:29: in wait_for_visibility\n    return self.wait.until(EC.visibility_of_element_located(locator), timeout)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"05816e9d13eb5eafde4ec1aa5b0ce118\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f3772b1e840>\nmessage = 10\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: 10\n\n../local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_task_search.TestTaskSearch object at 0x7f37713f1210>, login = None\ncreate_task = ('Color today station his.', 'Expect chance son he attorney national. Speech knowledge head later their at. Baby service season resource.', 1)\ndelete_task = <function delete_task.<locals>.delete at 0x7f3772a909a0>\n\n    @pytest.mark.order(37)\n    @pytest.mark.regression\n    @allure.feature(\"Task Search\")\n    @allure.description(\"\"\"\n    This test verifies that a user can successfully search for a task with a specific comment, ensuring that tasks containing the specified comment are correctly identified and displayed in the search results.\n    \"\"\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.title(\"TC37: Successful search for a task with a specific comment.\")\n    def test_task_search_by_comment(self, login, create_task, delete_task):\n        task_name, task_description, task_priority = create_task\n        fake = FakeDataGenerator()\n        comment = fake.comment\n        try:\n            # Steps:\n            self.home_page.open_task(task_name)\n            self.task_page.click_comment_button()\n            self.task_page.enter_comment(comment)\n            self.task_page.click_add_comment_button()\n            self.task_page.close_task()\n            self.home_page.click_search_button()\n            self.home_page.enter_search_request(comment)\n            self.home_page.press_enter()\n            self.search_page.click_comments_button()\n            self.search_page.is_page_heading_contains_search_result(comment)\n            self.search_page.is_task_list_contains_task_with_comment(task_name)\n        except Exception as e:\n            take_screenshot(self.driver, \"Task Search by Comment Test Failed\")\n            raise e\n        finally:\n            # Postconditions:\n            with allure.step(\"Postconditions: Delete the created task.\"):\n>               delete_task(task_name)\n\ntests/test_task_search.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:123: in delete\n    raise e\nconftest.py:117: in delete\n    home_page.click_more_actions_button(task_name)\npages/home_page.py:125: in click_more_actions_button\n    task_element = self.wait_for_visibility(task_locator)\nbase/base_page.py:29: in wait_for_visibility\n    return self.wait.until(EC.visibility_of_element_located(locator), timeout)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"05816e9d13eb5eafde4ec1aa5b0ce118\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f377499a160>\nmessage = 10\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: 10\n\n../local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1735925942431,
      "stop" : 1735925946529,
      "duration" : 4098
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open the page https://app.todoist.com/auth/login.",
      "time" : {
        "start" : 1735925942431,
        "stop" : 1735925943220,
        "duration" : 789
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter email into the \"Email\" field.",
      "time" : {
        "start" : 1735925943221,
        "stop" : 1735925943347,
        "duration" : 126
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "email",
        "value" : "'seb.bell@ymail.com'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Enter password into the \"Password\" field.",
      "time" : {
        "start" : 1735925943348,
        "stop" : 1735925943446,
        "duration" : 98
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "password",
        "value" : "'h28cnTtBfH3m'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Click on the \"Log in\" button.",
      "time" : {
        "start" : 1735925943447,
        "stop" : 1735925943519,
        "duration" : 72
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Verify that the page with the URL https://app.todoist.com/app/today is opened.",
      "time" : {
        "start" : 1735925943519,
        "stop" : 1735925946529,
        "duration" : 3010
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 5,
    "hasContent" : true
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1735925351277,
      "stop" : 1735925351342,
      "duration" : 65
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1735925942378,
      "stop" : 1735925942431,
      "duration" : 53
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1735925941967,
      "stop" : 1735925942378,
      "duration" : 411
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "create_task",
    "time" : {
      "start" : 1735925946529,
      "stop" : 1735925949980,
      "duration" : 3451
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Click on the \"Add task\" button.",
      "time" : {
        "start" : 1735925946531,
        "stop" : 1735925947479,
        "duration" : 948
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter task name into the \"Task name\" field.",
      "time" : {
        "start" : 1735925947479,
        "stop" : 1735925948104,
        "duration" : 625
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "task_name",
        "value" : "'Color today station his.'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Enter description into the \"Description\" field.",
      "time" : {
        "start" : 1735925948104,
        "stop" : 1735925948655,
        "duration" : 551
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "task_description",
        "value" : "'Expect chance son he attorney national. Speech knowledge head later their at. Baby service season resource.'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Set the task's Priority.",
      "time" : {
        "start" : 1735925948655,
        "stop" : 1735925948841,
        "duration" : 186
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "task_priority",
        "value" : "1"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Click on the submit \"Add task\" button.",
      "time" : {
        "start" : 1735925948841,
        "stop" : 1735925949980,
        "duration" : 1139
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 5,
    "hasContent" : true
  }, {
    "name" : "delete_task",
    "time" : {
      "start" : 1735925949980,
      "stop" : 1735925949980,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n    This test verifies that a user can successfully search for a task with a specific comment, ensuring that tasks containing the specified comment are correctly identified and displayed in the search results.\n    ",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: 10",
    "statusTrace" : "self = <test_task_search.TestTaskSearch object at 0x7f37713f1210>, login = None\ncreate_task = ('Color today station his.', 'Expect chance son he attorney national. Speech knowledge head later their at. Baby service season resource.', 1)\ndelete_task = <function delete_task.<locals>.delete at 0x7f3772a909a0>\n\n    @pytest.mark.order(37)\n    @pytest.mark.regression\n    @allure.feature(\"Task Search\")\n    @allure.description(\"\"\"\n    This test verifies that a user can successfully search for a task with a specific comment, ensuring that tasks containing the specified comment are correctly identified and displayed in the search results.\n    \"\"\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.title(\"TC37: Successful search for a task with a specific comment.\")\n    def test_task_search_by_comment(self, login, create_task, delete_task):\n        task_name, task_description, task_priority = create_task\n        fake = FakeDataGenerator()\n        comment = fake.comment\n        try:\n            # Steps:\n            self.home_page.open_task(task_name)\n            self.task_page.click_comment_button()\n            self.task_page.enter_comment(comment)\n            self.task_page.click_add_comment_button()\n            self.task_page.close_task()\n            self.home_page.click_search_button()\n            self.home_page.enter_search_request(comment)\n            self.home_page.press_enter()\n            self.search_page.click_comments_button()\n            self.search_page.is_page_heading_contains_search_result(comment)\n            self.search_page.is_task_list_contains_task_with_comment(task_name)\n        except Exception as e:\n            take_screenshot(self.driver, \"Task Search by Comment Test Failed\")\n>           raise e\n\ntests/test_task_search.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_task_search.py:107: in test_task_search_by_comment\n    self.home_page.open_task(task_name)\npages/home_page.py:85: in open_task\n    self.wait_for_visibility(task_locator)\nbase/base_page.py:29: in wait_for_visibility\n    return self.wait.until(EC.visibility_of_element_located(locator), timeout)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"05816e9d13eb5eafde4ec1aa5b0ce118\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f3772b1e840>\nmessage = 10\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: 10\n\n../local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_task_search.TestTaskSearch object at 0x7f37713f1210>, login = None\ncreate_task = ('Color today station his.', 'Expect chance son he attorney national. Speech knowledge head later their at. Baby service season resource.', 1)\ndelete_task = <function delete_task.<locals>.delete at 0x7f3772a909a0>\n\n    @pytest.mark.order(37)\n    @pytest.mark.regression\n    @allure.feature(\"Task Search\")\n    @allure.description(\"\"\"\n    This test verifies that a user can successfully search for a task with a specific comment, ensuring that tasks containing the specified comment are correctly identified and displayed in the search results.\n    \"\"\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.title(\"TC37: Successful search for a task with a specific comment.\")\n    def test_task_search_by_comment(self, login, create_task, delete_task):\n        task_name, task_description, task_priority = create_task\n        fake = FakeDataGenerator()\n        comment = fake.comment\n        try:\n            # Steps:\n            self.home_page.open_task(task_name)\n            self.task_page.click_comment_button()\n            self.task_page.enter_comment(comment)\n            self.task_page.click_add_comment_button()\n            self.task_page.close_task()\n            self.home_page.click_search_button()\n            self.home_page.enter_search_request(comment)\n            self.home_page.press_enter()\n            self.search_page.click_comments_button()\n            self.search_page.is_page_heading_contains_search_result(comment)\n            self.search_page.is_task_list_contains_task_with_comment(task_name)\n        except Exception as e:\n            take_screenshot(self.driver, \"Task Search by Comment Test Failed\")\n            raise e\n        finally:\n            # Postconditions:\n            with allure.step(\"Postconditions: Delete the created task.\"):\n>               delete_task(task_name)\n\ntests/test_task_search.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:123: in delete\n    raise e\nconftest.py:117: in delete\n    home_page.click_more_actions_button(task_name)\npages/home_page.py:125: in click_more_actions_button\n    task_element = self.wait_for_visibility(task_locator)\nbase/base_page.py:29: in wait_for_visibility\n    return self.wait.until(EC.visibility_of_element_located(locator), timeout)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"05816e9d13eb5eafde4ec1aa5b0ce118\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f377499a160>\nmessage = 10\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: 10\n\n../local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
    "steps" : [ {
      "name" : "Open the task.",
      "time" : {
        "start" : 1735925949983,
        "stop" : 1735925965082,
        "duration" : 15099
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: 10\n\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/home_page.py\", line 85, in open_task\n    self.wait_for_visibility(task_locator)\n  File \"/usr/workspace/base/base_page.py\", line 29, in wait_for_visibility\n    return self.wait.until(EC.visibility_of_element_located(locator), timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "task_name",
        "value" : "'Color today station his.'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Postconditions: Delete the created task.",
      "time" : {
        "start" : 1735925965207,
        "stop" : 1735925985523,
        "duration" : 20316
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: 10\n\n",
      "statusTrace" : "  File \"/usr/workspace/tests/test_task_search.py\", line 124, in test_task_search_by_comment\n    delete_task(task_name)\n  File \"/usr/workspace/conftest.py\", line 123, in delete\n    raise e\n  File \"/usr/workspace/conftest.py\", line 117, in delete\n    home_page.click_more_actions_button(task_name)\n  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/home_page.py\", line 125, in click_more_actions_button\n    task_element = self.wait_for_visibility(task_locator)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/workspace/base/base_page.py\", line 29, in wait_for_visibility\n    return self.wait.until(EC.visibility_of_element_located(locator), timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ {
        "name" : "Open the page https://app.todoist.com/app/today.",
        "time" : {
          "start" : 1735925967207,
          "stop" : 1735925968294,
          "duration" : 1087
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Click on the \"More actions\" button on the task.",
        "time" : {
          "start" : 1735925970295,
          "stop" : 1735925985392,
          "duration" : 15097
        },
        "status" : "broken",
        "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: 10\n\n",
        "statusTrace" : "  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/home_page.py\", line 125, in click_more_actions_button\n    task_element = self.wait_for_visibility(task_locator)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/workspace/base/base_page.py\", line 29, in wait_for_visibility\n    return self.wait.until(EC.visibility_of_element_located(locator), timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "task_name",
          "value" : "'Color today station his.'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ {
        "uid" : "6103c888c2bee5f6",
        "name" : "Task Deletion Failed",
        "source" : "6103c888c2bee5f6.png",
        "type" : "image/png",
        "size" : 64165
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "stepsCount" : 2,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "d2bf00a89e39072",
      "name" : "Task Search by Comment Test Failed",
      "source" : "d2bf00a89e39072.png",
      "type" : "image/png",
      "size" : 64404
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 4,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1735925985569,
      "stop" : 1735925985569,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Task Search"
  }, {
    "name" : "severity",
    "value" : "minor"
  }, {
    "name" : "tag",
    "value" : "regression"
  }, {
    "name" : "tag",
    "value" : "order(37)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_task_search"
  }, {
    "name" : "subSuite",
    "value" : "TestTaskSearch"
  }, {
    "name" : "host",
    "value" : "b167a48e153e"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_task_search"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "minor",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 8,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "501893996e11da8c",
        "status" : "passed",
        "time" : {
          "start" : 1735912889362,
          "stop" : 1735912898497,
          "duration" : 9135
        }
      }, {
        "uid" : "917fa97ef4438020",
        "status" : "passed",
        "time" : {
          "start" : 1735902727804,
          "stop" : 1735902737717,
          "duration" : 9913
        }
      }, {
        "uid" : "395b4d3ccce15f6d",
        "status" : "passed",
        "time" : {
          "start" : 1735897296804,
          "stop" : 1735897305553,
          "duration" : 8749
        }
      }, {
        "uid" : "68a895a5ef70a6f8",
        "status" : "passed",
        "time" : {
          "start" : 1735834480391,
          "stop" : 1735834489297,
          "duration" : 8906
        }
      }, {
        "uid" : "b0f551f6c96c201e",
        "status" : "passed",
        "time" : {
          "start" : 1735832568407,
          "stop" : 1735832577002,
          "duration" : 8595
        }
      }, {
        "uid" : "6186697019a8ee1e",
        "status" : "passed",
        "time" : {
          "start" : 1735828460823,
          "stop" : 1735828469855,
          "duration" : 9032
        }
      }, {
        "uid" : "6077122d7ba3c352",
        "status" : "passed",
        "time" : {
          "start" : 1735822318052,
          "stop" : 1735822327029,
          "duration" : 8977
        }
      }, {
        "uid" : "396e04e5889ef8ee",
        "status" : "passed",
        "time" : {
          "start" : 1735334139623,
          "stop" : 1735334148345,
          "duration" : 8722
        }
      } ]
    },
    "tags" : [ "regression", "order(37)" ]
  },
  "source" : "2173c124b313a579.json",
  "parameterValues" : [ ]
}