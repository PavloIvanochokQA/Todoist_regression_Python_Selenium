name: UI Tests

on: workflow_dispatch

jobs:
  ui-tests:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Checkout gh-pages repository to GitHub runner
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: ./.github/gh-pages

      - name: Run UI-tests via docker-compose
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          USERNAME: ${{ secrets.USERNAME }}
          GMAIL: ${{ secrets.GMAIL }}
          GMAIL_PASSWORD: ${{ secrets.GMAIL_PASSWORD }}
          GMAIL_USERNAME: ${{ secrets.GMAIL_USERNAME }}
        run: |
          docker compose build
          docker compose up --exit-code-from regression || true
        id: ui_tests

      - name: Get test status
        run: |
          echo "Checking test status..."
          if [[ "${{ steps.ui_tests.outcome }}" == "success" ]]; then
            echo "All tests passed successfully" > status.txt
          else
            echo "Some tests failed" > status.txt
          fi
        id: set_status

      - name: Export status to environment
        run: echo "STATUS=$(cat status.txt)" >> $GITHUB_ENV

      - name: Copy history from gh-pages to allure-results
        run: |
          sudo mkdir -p allure-results/history
          sudo cp -R ./.github/gh-pages/history/* allure-results/history/ || echo "No history to copy"

      - name: Generate Allure report
        run: |
          docker compose run regression /bin/sh -c "allure generate allure-results --clean -o allure-report"

      - name: Update Allure history
        run: |
          sudo mkdir -p ./.github/gh-pages/history
          sudo cp -R allure-report/history/* ./.github/gh-pages/history/ || echo "No new history"

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          token: ${{ secrets.CI_TOKEN }}
          branch: gh-pages
          folder: allure-report
          clean: true

      - name: Send Report to Telegram
        env:
          STATUS: ${{ env.STATUS }}
        run: |
          curl --location "https://api.telegram.org/bot${{ secrets.TG }}/sendMessage" \
          --header "Content-Type: application/json" \
          --data "{
            \"chat_id\": 1302748266,
            \"text\": \"Testing finished. $STATUS Report is here: https://pavloivanochokqa.github.io/Todoist_regression_Python_Selenium/\"
          }"
